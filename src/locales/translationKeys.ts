// 自动生成的翻译键类型定义，请勿直接修改
// Generated on: 2025-03-12T03:10:00.168Z

export type TranslationKey =
    | 'ok'
    | 'cancel'
    | 'save'
    | 'delete'
    | 'copy'
    | 'regenerate'
    | 'settings'
    | 'stop'
    | 'validated'
    | 'edit'
    | 'clear'
    | 'create'
    | 'suggestedPrompt1'
    | 'suggestedPrompt2'
    | 'suggestedPrompt3'
    | 'suggestedPrompt4'
    | 'appTitle'
    | 'assistants'
    | 'topics'
    | 'expand'
    | 'collapse'
    | 'newTopic'
    | 'searchTopics'
    | 'noTopicsFound'
    | 'noTopics'
    | 'createTopic'
    | 'editTopic'
    | 'enterTopicName'
    | 'topicNameRequired'
    | 'topicCreated'
    | 'topicUpdated'
    | 'topicDeleted'
    | 'deleteTopicConfirm'
    | 'deleteTopicContent'
    | 'question'
    | 'saveConfig'
    | 'savingConfig'
    | 'serviceProvider'
    | 'selectProvider'
    | 'apiKey'
    | 'enterApiKey'
    | 'getApiKey'
    | 'validate'
    | 'apiHost'
    | 'enterApiHost'
    | 'modelSelection'
    | 'selectModel'
    | 'showIcon'
    | 'setShortcuts'
    | 'starAuthor'
    | 'configSaved'
    | 'validatingApi'
    | 'apiValidSuccess'
    | 'apiValidFailed'
    | 'savingConfigError'
    | 'aiAssistant'
    | 'askAnything'
    | 'exampleSummarize'
    | 'exampleMainPoints'
    | 'exampleHowToUse'
    | 'typeMessage'
    | 'send'
    | 'thinking'
    | 'think'
    | 'processing'
    | 'interrupted'
    | 'you'
    | 'assistant'
    | 'askWebpage'
    | 'sendMessage'
    | 'interfaceSettings'
    | 'errorProcessing'
    | 'errorRegenerating'
    | 'regenerating'
    | 'copied'
    | 'failedCopy'
    | 'codeCopied'
    | 'failedCodeCopy'
    | 'copyMessage'
    | 'selectProviderFirst'
    | 'unpinWindow'
    | 'pinWindow'
    | 'language'
    | 'languageEn'
    | 'languageZhCN'
    | 'languageZhTW'
    | 'languageJa'
    | 'languageKo'
    | 'languageChanged'
    | 'includeWebpage'
    | 'includeWebpageTooltip'
    | 'translate'
    | 'translatePrompt'
    | 'summarize'
    | 'summarizePrompt'
    | 'explain'
    | 'explainPrompt'
    | 'codeReview'
    | 'codeReviewPrompt'
    | 'rewrite'
    | 'rewritePrompt'
    | 'webSearch'
    | 'webSearchTooltip'
    | 'on'
    | 'off'
    | 'searchingWeb'
    | 'searchComplete'
    | 'noSearchResults'
    | 'exclusiveFeatureError'
    | 'exclusiveFeatureWarning'
    | 'webSearchResultsTips1'
    | 'webSearchResultsTips2'
    | 'Source'
    | 'close'
    | 'webpageContent'
    | 'webpagePrompt'
    | 'fetchWebpageContent'
    | 'fetchWebpageContentSuccess'
    | 'fetchWebpageContentFailed'
    | 'pleaseInputApiKey'
    | 'REFERENCE_PROMPT'
    | 'filteredDomains'
    | 'searchEngines'
    | 'openSettings'
    | 'openChat'
    | 'pressTip'
    | 'welcomeMessage'
    | 'tryAsking'
    | 'apiSettings'
    | 'interface'
    | 'search'
    | 'about'
    | 'tavilyApiKey'
    | 'enterTavilyApiKey'
    | 'getTavilyApiKey'
    | 'selectAtLeastOneSearchEngine'
    | 'noFilteredDomains'
    | 'enterDomainToFilter'
    | 'add'
    | 'enableWebSearchMessage'
    | 'aboutDescription'
    | 'autoSaving'
    | 'autoSaved'
    | 'autoSaveError'
    | 'validatingTavilyApi'
    | 'tavilyApiValidSuccess'
    | 'tavilyApiValidError'
    | 'feedback'
    | 'apiKeyNeeded'
    | 'enterQuestion'
    | 'systemPrompt'
    | 'modelListNotSupported'
    | 'pleaseSelectProvider'
    | 'pleaseEnterApiKey'
    | 'providerBaseUrlNotFound'
    | 'httpError'
    | 'invalidProviderData'
    | 'backgroundSearchFailed'
    | 'webContentFetchFailed'
    | 'baiduSearchFailed'
    | 'googleSearchFailed'
    | 'duckduckgoSearchFailed'
    | 'sogouSearchFailed'
    | 'braveSearchFailed'
    | 'searxngSearchFailed'
    | 'defaultTopicName'
    | 'errorDefault'
    | 'error400'
    | 'error401'
    | 'error403'
    | 'error404'
    | 'error429'
    | 'error500'
    | 'error502'
    | 'error503'
    | 'error504'
    | 'modelSettingsSaved'
    | 'failedToLoadModelSettings'
    | 'failedToSaveModelSettings'
    | 'providersWithApiKey'
    | 'providersWithoutApiKey';

// 模型设置相关
export const CHAT_MODEL = 'chatModel';
export const POPUP_MODEL = 'popupModel';
export const SIDEBAR_MODEL = 'sidebarModel';
export const CHAT_MODEL_DESCRIPTION = 'chatModelDescription';
export const POPUP_MODEL_DESCRIPTION = 'popupModelDescription';
export const SIDEBAR_MODEL_DESCRIPTION = 'sidebarModelDescription';
export const MODEL_PROVIDER = 'modelProvider';
export const MODEL_NAME = 'modelName';
export const SELECT_MODEL_FIRST = 'selectModelFirst';
export const MODEL_SETTINGS_SAVED = 'modelSettingsSaved';
export const FAILED_TO_LOAD_MODEL_SETTINGS = 'failedToLoadModelSettings';
export const FAILED_TO_SAVE_MODEL_SETTINGS = 'failedToSaveModelSettings';
export const NO_PROVIDERS_CONFIGURED = 'noProvidersConfigured';
export const MODEL_SETTINGS_INFO = 'modelSettingsInfo';
